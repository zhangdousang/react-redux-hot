(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["react"], factory);
	else if(typeof exports === 'object')
		exports["ReactKeyHandler"] = factory(require("react"));
	else
		root["ReactKeyHandler"] = factory(root["React"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_3__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(1);

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.keyToggleHandler = exports.keyHandler = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _constants = __webpack_require__(2);

	Object.keys(_constants).forEach(function (key) {
	  if (key === "default") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _constants[key];
	    }
	  });
	});

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _exenv = __webpack_require__(4);

	var _utils = __webpack_require__(5);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * KeyHandler component.
	 */

	var KeyHandler = function (_React$Component) {
	  _inherits(KeyHandler, _React$Component);

	  _createClass(KeyHandler, [{
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate() {
	      return false;
	    }
	  }]);

	  function KeyHandler(props) {
	    _classCallCheck(this, KeyHandler);

	    /* eslint-disable no-console */

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(KeyHandler).call(this, props));

	    if (!props.keyValue && !props.keyCode && !props.keyName) {
	      console.error('Warning: Failed propType: Missing prop `keyValue`, `keyCode` or `keyName` for `KeyHandler`.');
	    }

	    if (props.keyName) {
	      console.error('Warning: Failed propType: Do not use deprecated prop `keyName`, use `keyValue` or `keyCode` instead for `KeyHandler`.');
	    }

	    /* eslint-enable */

	    _this.handleKey = _this.handleKey.bind(_this);
	    return _this;
	  }

	  _createClass(KeyHandler, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      if (!_exenv.canUseDOM) return;

	      window.document.addEventListener(this.props.keyEventName, this.handleKey);
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      if (!_exenv.canUseDOM) return;

	      window.document.removeEventListener(this.props.keyEventName, this.handleKey);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return null;
	    }
	  }, {
	    key: 'handleKey',
	    value: function handleKey(event) {
	      var _props = this.props;
	      var keyValue = _props.keyValue;
	      var keyCode = _props.keyCode;
	      var keyName = _props.keyName;
	      var onKeyHandle = _props.onKeyHandle;


	      if (!onKeyHandle) {
	        return;
	      }

	      var target = event.target;


	      if (target instanceof window.HTMLElement && (0, _utils.isInput)(target)) {
	        return;
	      }

	      if (!(0, _utils.matchesKeyboardEvent)(event, { keyValue: keyValue, keyCode: keyCode, keyName: keyName })) {
	        return;
	      }

	      onKeyHandle(event);
	    }
	  }]);

	  return KeyHandler;
	}(_react2.default.Component);

	/**
	 * Types.
	 */

	KeyHandler.propTypes = {
	  keyValue: _react2.default.PropTypes.string,
	  keyCode: _react2.default.PropTypes.number,
	  keyEventName: _react2.default.PropTypes.oneOf([_constants.KEYDOWN, _constants.KEYPRESS, _constants.KEYUP]),
	  keyName: _react2.default.PropTypes.string,
	  onKeyHandle: _react2.default.PropTypes.func
	};
	KeyHandler.defaultProps = {
	  keyEventName: _constants.KEYUP
	};
	exports.default = KeyHandler;


	/**
	 * KeyHandler decorators.
	 */

	function keyHandleDecorator() {
	  var matcher = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];

	  return function (props) {
	    var _ref = props || {};

	    var keyValue = _ref.keyValue;
	    var keyCode = _ref.keyCode;
	    var keyName = _ref.keyName;
	    var keyEventName = _ref.keyEventName;


	    return function (Component) {
	      return function (_React$Component2) {
	        _inherits(KeyHandleDecorator, _React$Component2);

	        function KeyHandleDecorator(props) {
	          _classCallCheck(this, KeyHandleDecorator);

	          var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(KeyHandleDecorator).call(this, props));

	          _this2.state = { keyValue: null, keyCode: null, keyName: null };


	          _this2.handleKey = _this2.handleKey.bind(_this2);
	          return _this2;
	        }

	        _createClass(KeyHandleDecorator, [{
	          key: 'render',
	          value: function render() {
	            return _react2.default.createElement(
	              'div',
	              null,
	              _react2.default.createElement(KeyHandler, { keyValue: keyValue, keyCode: keyCode, keyEventName: keyEventName, keyName: keyName, onKeyHandle: this.handleKey }),
	              _react2.default.createElement(Component, _extends({}, this.props, this.state))
	            );
	          }
	        }, {
	          key: 'handleKey',
	          value: function handleKey(event) {
	            if (matcher && matcher(event, this.state)) {
	              this.setState({ keyValue: null, keyCode: null, keyName: null });
	            } else {
	              this.setState({ keyValue: (0, _utils.eventKey)(event), keyCode: event.keyCode, keyName: (0, _utils.eventKeyName)(event) });
	            }
	          }
	        }]);

	        return KeyHandleDecorator;
	      }(_react2.default.Component);
	    };
	  };
	}

	var keyHandler = exports.keyHandler = keyHandleDecorator();
	var keyToggleHandler = exports.keyToggleHandler = keyHandleDecorator(_utils.matchesKeyboardEvent);

	/**
	 * Constants
	 */

/***/ },
/* 2 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Key event names.
	 */

	var KEYDOWN = exports.KEYDOWN = 'keydown';
	var KEYPRESS = exports.KEYPRESS = 'keypress';
	var KEYUP = exports.KEYUP = 'keyup';

/***/ },
/* 3 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_3__;

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2015 Jed Watson.
	  Based on code that is Copyright 2013-2015, Facebook, Inc.
	  All rights reserved.
	*/
	/* global define */

	(function () {
		'use strict';

		var canUseDOM = !!(
			typeof window !== 'undefined' &&
			window.document &&
			window.document.createElement
		);

		var ExecutionEnvironment = {

			canUseDOM: canUseDOM,

			canUseWorkers: typeof Worker !== 'undefined',

			canUseEventListeners:
				canUseDOM && !!(window.addEventListener || window.attachEvent),

			canUseViewport: canUseDOM && !!window.screen

		};

		if (true) {
			!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return ExecutionEnvironment;
			}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else if (typeof module !== 'undefined' && module.exports) {
			module.exports = ExecutionEnvironment;
		} else {
			window.ExecutionEnvironment = ExecutionEnvironment;
		}

	}());


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.isInput = isInput;
	exports.matchesKeyboardEvent = matchesKeyboardEvent;
	exports.eventKey = eventKey;
	exports.eventKeyName = eventKeyName;

	var _keycodes = __webpack_require__(6);

	var _keycodes2 = _interopRequireDefault(_keycodes);

	var _constants = __webpack_require__(2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Constants.
	 */

	/**
	 * Types.
	 */

	var NORMALIZED_KEYS = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};

	var KEY_CODE_KEYS = {
	  '8': 'Backspace',
	  '9': 'Tab',
	  '12': 'Clear',
	  '13': 'Enter',
	  '16': 'Shift',
	  '17': 'Control',
	  '18': 'Alt',
	  '19': 'Pause',
	  '20': 'CapsLock',
	  '27': 'Escape',
	  '32': ' ',
	  '33': 'PageUp',
	  '34': 'PageDown',
	  '35': 'End',
	  '36': 'Home',
	  '37': 'ArrowLeft',
	  '38': 'ArrowUp',
	  '39': 'ArrowRight',
	  '40': 'ArrowDown',
	  '45': 'Insert',
	  '46': 'Delete',
	  '112': 'F1',
	  '113': 'F2',
	  '114': 'F3',
	  '115': 'F4',
	  '116': 'F5',
	  '117': 'F6',
	  '118': 'F7',
	  '119': 'F8',
	  '120': 'F9',
	  '121': 'F10',
	  '122': 'F11',
	  '123': 'F12',
	  '144': 'NumLock',
	  '145': 'ScrollLock',
	  '224': 'Meta'
	};

	/**
	 * Check if `given` element is an input / textarea form element or acts as one.
	 */

	function isInput(element) {
	  if (!element) {
	    return false;
	  }

	  var tagName = element.tagName;

	  var editable = isContentEditable(element);

	  return tagName === 'INPUT' || tagName === 'TEXTAREA' || editable;
	}

	function isContentEditable(element) {
	  if (typeof element.getAttribute !== 'function') {
	    return false;
	  }

	  return !!element.getAttribute('contenteditable');
	}

	/**
	 * Matches an event against a given keyboard key.
	 */

	function matchesKeyboardEvent(event, _ref) {
	  var keyCode = _ref.keyCode;
	  var keyValue = _ref.keyValue;
	  var keyName = _ref.keyName;

	  if (!isNullOrUndefined(keyValue)) {
	    return keyValue === eventKey(event);
	  }

	  if (!isNullOrUndefined(keyCode)) {
	    return keyCode === event.keyCode;
	  }

	  if (!isNullOrUndefined(keyName)) {
	    return keyName === eventKeyName(event);
	  }

	  return false;
	}

	function isNullOrUndefined(value) {
	  return value === undefined || value === null;
	}

	function eventKey(event) {
	  var key = event.key;
	  var keyCode = event.keyCode;
	  var type = event.type;


	  if (key) {
	    var normalizedKey = NORMALIZED_KEYS[key] || key;

	    if (normalizedKey !== 'Unidentified') {
	      return normalizedKey;
	    }
	  }

	  if (type === _constants.KEYPRESS) {
	    var charCode = eventCharCode(event);

	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }

	  if (type === _constants.KEYDOWN || type === _constants.KEYUP) {
	    return KEY_CODE_KEYS[String(keyCode)] || 'Unidentified';
	  }

	  return '';
	}

	function eventKeyName(event) {
	  return (0, _keycodes2.default)(event.keyCode);
	}

	function eventCharCode(event) {
	  var charCode = event.charCode;
	  var keyCode = event.keyCode;


	  if ('charCode' in event) {
	    if (charCode === 0 && keyCode === 13) {
	      return 13;
	    }
	  } else {
	    charCode = keyCode;
	  }

	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }

	  return 0;
	}

/***/ },
/* 6 */
/***/ function(module, exports) {

	'use strict';

	var keys = {
	  ctrl: 17,
	  control: 17,
	  alt: 18,
	  option: 18,
	  shift: 16,
	  windows: 91,
	  command: 91,
	  esc: 27,
	  escape: 27,
	  '`': 192,
	  '-': 189,
	  '=': 187,
	  backspace: 8,
	  tab: 9,
	  '\\': 220,
	  '[': 219,
	  ']': 221,
	  ';': 186,
	  '\'': 222,
	  enter: 13,
	  'return': 13,
	  ',': 188,
	  '.': 190,
	  '/': 191,
	  space: 32,
	  pause: 19,
	  'break': 19,
	  insert: 45,
	  'delete': 46,
	  home: 36,
	  end: 35,
	  pageup: 33,
	  pagedown: 34,
	  left: 37,
	  up: 38,
	  right: 39,
	  down: 40,
	  capslock: 20,
	  numlock: 144,
	  scrolllock: 145
	};

	for (var f = 1; f < 20; f++) {
	  keys['f' + f] = 111 + f;
	}

	module.exports = function (input) {
	  if (typeof input === 'string') return code(input);
	  if (typeof input === 'number') return key(input);
	};

	function code(input) {
	  return keys[input.toLowerCase()] || input.toUpperCase().charCodeAt(0);
	}

	function key(input) {
	  for (var k in keys) {
	    if (keys.hasOwnProperty(k)) {
	      if (keys[k] === input) return k;
	    }
	  }

	  return String.fromCharCode(input).toLowerCase();
	}


/***/ }
/******/ ])
});
;